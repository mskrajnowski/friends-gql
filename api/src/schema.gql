type Person {
    id: ID!
    name: String!
    email: String
    address: String

    friends: [Person]
}

type Self {
    person: Person
    sentRequests: [FriendRequest]
    receivedRequests: [FriendRequest]
}

type FriendRequest {
    id: ID!
    from: Person!
    to: Person!
    message: String
}

type Query {
    me: Self
    people: [Person]
    person(id: ID!): Person
}

input UpdateProfileInput {
    name: String
    email: String
    address: String
}

input FriendRequestInput {
    id: ID!
    message: String
}

type Mutation {
    updateProfile(input: UpdateProfileInput): Self

    requestFriend(input: FriendRequestInput): FriendRequest
    cancelRequest(id: ID!): Self
    acceptRequest(id: ID!): Self
    rejectRequest(id: ID!): Self
    removeFriend(id: ID!): Self
}

schema {
  query: Query
  mutation: Mutation
}
